<?xml version="1.0" encoding="UTF-8"?>
<!--
* 패턴에 사용되는 요소
1. %Logger{length}      - Logger name을 축약할 수 있다. {length}는 최대 자리 수
2. %thread      - 현재 Thread 이름
3. %-5level     - 로그 레벨, -5는 출력의 고정폭 값
4. %msg - 로그 메시지 (=%message)
5. %n   - new line
6. ${PID:-}     - 프로세스 아이디

기타
%d : 로그 기록시간,      %p : 로깅 레벨
%F : 로깅이 발생한 프로그램 파일명,      %M : 로깅일 발생한 메소드의 이름
%l : 로깅이 발생한 호출지의 정보,        %L : 로깅이 발생한 호출지의 라인 수
%t : 쓰레드 명,          %c : 로깅이 발생한 카테고리
%C : 로깅이 발생한 클래스 명,    %m : 로그 메시지
%r : 애플리케이션 시작 이후부터 로깅이 발생한 시점까지의 시간
-->

<!-- 30초마다 설정 파일의 변경을 확인한다. 파일이 변경되면 다시 로딩한다 -->
<configuration scan="true" scanPeriod="30 seconds">

    <!--<property name="LOG_FILE_PATH" value="/usr/local/src/woc/logFile" />-->

    <!-- 콘솔로 로그를 남김 -->
    <appender name="consoleAppender" class="ch.qos.logback.core.ConsoleAppender">
        <encoder>
            <pattern>[%d{yyyy-MM-dd HH:mm:ss}:%-3relative][%thread] %-5level %logger{35} - %msg%n</pattern>
        </encoder>
    </appender>

    <!-- 파일로 로그를 남김 -->
    <!--<appender name="fileAppender" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${LOG_FILE_PATH}/logFile.log</file>

        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <pattern>[%d{yyyy-MM-dd HH:mm:ss}:%-3relative][%thread] %-5level %logger{35} - %msg%n</pattern>
        </encoder>

        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <fileNamePattern>${LOG_FILE_PATH}.%d{yyyy-MM-dd}.%i.log</fileNamePattern>
            <maxFileSize>10MB</maxFileSize>
            <maxHistory>30</maxHistory>
        </rollingPolicy>

    </appender>
-->
    <logger name="jdbc.resultset" additivity="false">
        <level value="OFF"/>
        <appender-ref ref="consoleAppender"/>
    </logger>

    <logger name="org.springframework" additivity="false">
        <level value="warn"/>
        <appender-ref ref="consoleAppender"/>
    </logger>
    <logger name="com.zaxxer.hikari.pool" additivity="false">
        <level value="warn"/>
        <appender-ref ref="consoleAppender"/>
    </logger>

    <springProfile name="local">
        <!-- root는 글로벌 로거를 의미하며, 위의 logger에 해당하지 않으면 root 로거가 실행된다. -->
        <root level="debug">
            <appender-ref ref="consoleAppender" />
        </root>
    </springProfile>

    <springProfile name="actual">
        <root level="warn">
            <appender-ref ref="consoleAppender" />
            <appender-ref ref="fileAppender" />
        </root>
    </springProfile>

</configuration>
